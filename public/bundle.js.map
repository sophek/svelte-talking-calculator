{"version":3,"file":"bundle.js","sources":["../node_modules/svelte/internal/index.mjs","../node_modules/object-assign/index.js","../node_modules/is-string/index.js","../node_modules/accounting-js/lib/settings.js","../node_modules/accounting-js/lib/toFixed.js","../node_modules/accounting-js/lib/internal/checkPrecision.js","../node_modules/accounting-js/lib/formatMoney.js","../node_modules/accounting-js/lib/internal/checkCurrencyFormat.js","../node_modules/accounting-js/lib/formatNumber.js","../node_modules/accounting-js/lib/internal/stripInsignificantZeros.js","../src/components/Calculator.svelte","../src/App.svelte","../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction validate_store(store, name) {\n    if (!store || typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(component, store, callback) {\n    const unsub = store.subscribe(callback);\n    component.$$.on_destroy.push(unsub.unsubscribe\n        ? () => unsub.unsubscribe()\n        : unsub);\n}\nfunction create_slot(definition, ctx, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, fn) {\n    return definition[1]\n        ? assign({}, assign(ctx.$$scope.ctx, definition[1](fn ? fn(ctx) : {})))\n        : ctx.$$scope.ctx;\n}\nfunction get_slot_changes(definition, ctx, changed, fn) {\n    return definition[1]\n        ? assign({}, assign(ctx.$$scope.changed || {}, definition[1](fn ? fn(changed) : {})))\n        : ctx.$$scope.changed || {};\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = cb => requestAnimationFrame(cb);\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nlet running = false;\nfunction run_tasks() {\n    tasks.forEach(task => {\n        if (!task[0](now())) {\n            tasks.delete(task);\n            task[1]();\n        }\n    });\n    running = tasks.size > 0;\n    if (running)\n        raf(run_tasks);\n}\nfunction clear_loops() {\n    // for testing...\n    tasks.forEach(task => tasks.delete(task));\n    running = false;\n}\nfunction loop(fn) {\n    let task;\n    if (!running) {\n        running = true;\n        raf(run_tasks);\n    }\n    return {\n        promise: new Promise(fulfil => {\n            tasks.add(task = [fn, fulfil]);\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction detach_between(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        before.parentNode.removeChild(before.nextSibling);\n    }\n}\nfunction detach_before(after) {\n    while (after.previousSibling) {\n        after.parentNode.removeChild(after.previousSibling);\n    }\n}\nfunction detach_after(before) {\n    while (before.nextSibling) {\n        before.parentNode.removeChild(before.nextSibling);\n    }\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction object_without_properties(obj, exclude) {\n    // eslint-disable-next-line @typescript-eslint/no-object-literal-type-assertion\n    const target = {};\n    for (const k in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    for (const key in attributes) {\n        if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key in node) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group) {\n    const value = [];\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.push(group[i].__value);\n    }\n    return value;\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            for (let j = 0; j < node.attributes.length; j += 1) {\n                const attribute = node.attributes[j];\n                if (!attributes[attribute.name])\n                    node.removeAttribute(attribute.name);\n            }\n            return nodes.splice(i, 1)[0]; // TODO strip unwanted attributes\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data !== data)\n        text.data = data;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value) {\n    node.style.setProperty(key, value);\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\nfunction add_resize_listener(element, fn) {\n    if (getComputedStyle(element).position === 'static') {\n        element.style.position = 'relative';\n    }\n    const object = document.createElement('object');\n    object.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;');\n    object.type = 'text/html';\n    object.tabIndex = -1;\n    let win;\n    object.onload = () => {\n        win = object.contentDocument.defaultView;\n        win.addEventListener('resize', fn);\n    };\n    if (/Trident/.test(navigator.userAgent)) {\n        element.appendChild(object);\n        object.data = 'about:blank';\n    }\n    else {\n        object.data = 'about:blank';\n        element.appendChild(object);\n    }\n    return {\n        cancel: () => {\n            win && win.removeEventListener && win.removeEventListener('resize', fn);\n            element.removeChild(object);\n        }\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\n\nlet stylesheet;\nlet active = 0;\nlet current_rules = {};\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    if (!current_rules[name]) {\n        if (!stylesheet) {\n            const style = element('style');\n            document.head.appendChild(style);\n            stylesheet = style.sheet;\n        }\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    node.style.animation = (node.style.animation || '')\n        .split(', ')\n        .filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    )\n        .join(', ');\n    if (name && !--active)\n        clear_rules();\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        let i = stylesheet.cssRules.length;\n        while (i--)\n            stylesheet.deleteRule(i);\n        current_rules = {};\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = current_component;\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nfunction flush() {\n    const seen_callbacks = new Set();\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (dirty_components.length) {\n            const component = dirty_components.shift();\n            set_current_component(component);\n            update(component.$$);\n        }\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                callback();\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n}\nfunction update($$) {\n    if ($$.fragment) {\n        $$.update($$.dirty);\n        run_all($$.before_update);\n        $$.fragment.p($$.dirty, $$.ctx);\n        $$.dirty = null;\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = key && { [key]: value };\n        const child_ctx = assign(assign({}, info.ctx), info.resolved);\n        const block = type && (info.current = type)(child_ctx);\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            flush();\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n    }\n    if (is_promise(promise)) {\n        promise.then(value => {\n            update(info.then, 1, info.value, value);\n        }, error => {\n            update(info.catch, 2, info.error, error);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = { [info.value]: promise };\n    }\n}\n\nconst globals = (typeof window !== 'undefined' ? window : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, changed, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(changed, child_ctx);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction measure(blocks) {\n    const rects = {};\n    let i = blocks.length;\n    while (i--)\n        rects[blocks[i].key] = blocks[i].node.getBoundingClientRect();\n    return rects;\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args) {\n    const attributes = Object.assign({}, ...args);\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === undefined)\n            return;\n        if (value === true)\n            str += \" \" + name;\n        const escaped = String(value)\n            .replace(/\"/g, '&#34;')\n            .replace(/'/g, '&#39;');\n        str += \" \" + name + \"=\" + JSON.stringify(escaped);\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.head\n            };\n        },\n        $$render\n    };\n}\n/**\n * Get the current value from a store by subscribing and immediately unsubscribing.\n * @param store readable\n */\nfunction get_store_value(store) {\n    let value;\n    const unsubscribe = store.subscribe(_ => value = _);\n    if (unsubscribe.unsubscribe)\n        unsubscribe.unsubscribe();\n    else\n        unsubscribe();\n    return value;\n}\nfunction add_attribute(name, value) {\n    if (!value)\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(value) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    if (component.$$.props.indexOf(name) === -1)\n        return;\n    component.$$.bound[name] = callback;\n    callback(component.$$.ctx[name]);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    if (component.$$.fragment) {\n        run_all(component.$$.on_destroy);\n        component.$$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        component.$$.on_destroy = component.$$.fragment = null;\n        component.$$.ctx = {};\n    }\n}\nfunction make_dirty(component, key) {\n    if (!component.$$.dirty) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty = blank_object();\n    }\n    component.$$.dirty[key] = true;\n}\nfunction init(component, options, instance, create_fragment, not_equal, prop_names) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const props = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props: prop_names,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty: null\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, props, (key, value) => {\n            if ($$.ctx && not_equal($$.ctx[key], $$.ctx[key] = value)) {\n                if ($$.bound[key])\n                    $$.bound[key](value);\n                if (ready)\n                    make_dirty(component, key);\n            }\n        })\n        : props;\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    $$.fragment = create_fragment($$.ctx);\n    if (options.target) {\n        if (options.hydrate) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment.l(children(options.target));\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement !== 'undefined') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set() {\n            // overridden by instance, if it has props\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set() {\n        // overridden by instance, if it has props\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n}\n\nexport { SvelteComponent, SvelteComponentDev, SvelteElement, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, assign, attr, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_element, claim_text, clear_loops, createEventDispatcher, create_animation, create_bidirectional_transition, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, debug, destroy_block, destroy_component, destroy_each, detach, detach_after, detach_before, detach_between, dirty_components, each, element, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_slot_changes, get_slot_context, get_spread_update, get_store_value, globals, group_outros, handle_promise, identity, init, insert, intros, invalid_attribute_name_character, is_client, is_function, is_promise, listen, loop, measure, missing_component, mount_component, noop, not_equal, now, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_input_type, set_now, set_raf, set_style, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, validate_component, validate_store, xlink_attr };\n","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","'use strict';\n\nvar strValue = String.prototype.valueOf;\nvar tryStringObject = function tryStringObject(value) {\n\ttry {\n\t\tstrValue.call(value);\n\t\treturn true;\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\nvar toStr = Object.prototype.toString;\nvar strClass = '[object String]';\nvar hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\n\nmodule.exports = function isString(value) {\n\tif (typeof value === 'string') { return true; }\n\tif (typeof value !== 'object') { return false; }\n\treturn hasToStringTag ? tryStringObject(value) : toStr.call(value) === strClass;\n};\n","/**\n * The library's settings configuration object.\n *\n * Contains default parameters for currency and number formatting\n */\nconst settings = {\n  symbol: '$',        // default currency symbol is '$'\n  format: '%s%v',     // controls output: %s = symbol, %v = value (can be object, see docs)\n  decimal: '.',       // decimal point separator\n  thousand: ',',      // thousands separator\n  precision: 2,       // decimal places\n  grouping: 3,        // digit grouping (not implemented yet)\n  stripZeros: false,  // strip insignificant zeros from decimal part\n  fallback: 0         // value returned on unformat() failure\n};\n\nexport default settings;\n","import _checkPrecision from './internal/checkPrecision';\nimport settings from './settings';\n\n/**\n * Implementation of toFixed() that treats floats more like decimals\n *\n * Fixes binary rounding issues (eg. (0.615).toFixed(2) === '0.61') that present\n * problems for accounting- and finance-related software.\n *\n * ```js\n *  (0.615).toFixed(2);           // \"0.61\" (native toFixed has rounding issues)\n *  accounting.toFixed(0.615, 2); // \"0.62\"\n * ```\n *\n * @method toFixed\n * @for accounting\n * @param {Float}   value         The float to be treated as a decimal number.\n * @param {Number} [precision=2] The number of decimal digits to keep.\n * @return {String} The given number transformed into a string with the given precission\n */\nfunction toFixed(value, precision) {\n  precision = _checkPrecision(precision, settings.precision);\n  const power = Math.pow(10, precision);\n\n  // Multiply up by precision, round accurately, then divide and use native toFixed():\n  return (Math.round((value + 1e-8) * power) / power).toFixed(precision);\n}\n\nexport default toFixed;\n","/**\n * Check and normalise the value of precision (must be positive integer)\n */\nfunction _checkPrecision(val, base) {\n  val = Math.round(Math.abs(val));\n  return isNaN(val) ? base : val;\n}\n\nexport default _checkPrecision;\n","import objectAssign from 'object-assign';\n\nimport _checkCurrencyFormat from './internal/checkCurrencyFormat';\nimport settings from './settings';\nimport formatNumber from './formatNumber';\n\n/**\n * Format a number into currency\n *\n * Usage: accounting.formatMoney(number, symbol, precision, thousandsSep, decimalSep, format)\n * defaults: (0, '$', 2, ',', '.', '%s%v')\n *\n * Localise by overriding the symbol, precision, thousand / decimal separators and format\n *\n * ```js\n * // Default usage:\n * accounting.formatMoney(12345678); // $12,345,678.00\n *\n * // European formatting (custom symbol and separators), can also use options object as second parameter:\n * accounting.formatMoney(4999.99, { symbol: \"€\", precision: 2, thousand: \".\", decimal: \",\" }); // €4.999,99\n *\n * // Negative values can be formatted nicely:\n * accounting.formatMoney(-500000, { symbol: \"£ \", precision: 0 }); // £ -500,000\n *\n * // Simple `format` string allows control of symbol position (%v = value, %s = symbol):\n * accounting.formatMoney(5318008, { symbol: \"GBP\",  format: \"%v %s\" }); // 5,318,008.00 GBP\n * ```\n *\n * @method formatMoney\n * @for accounting\n * @param {Number}        number Number to be formatted.\n * @param {Object}        [opts={}] Object containing all the options of the method.\n * @return {String} The given number properly formatted as money.\n */\nfunction formatMoney(number, opts = {}) {\n  // Resursively format arrays:\n  if (Array.isArray(number)) {\n    return number.map((val) => formatMoney(val, opts));\n  }\n\n  // Build options object from second param (if object) or all params, extending defaults:\n  opts = objectAssign({},\n    settings,\n    opts\n  );\n\n  // Check format (returns object with pos, neg and zero):\n  const formats = _checkCurrencyFormat(opts.format);\n\n  // Choose which format to use for this value:\n  let useFormat;\n\n  if (number > 0) {\n    useFormat = formats.pos;\n  } else if (number < 0) {\n    useFormat = formats.neg;\n  } else {\n    useFormat = formats.zero;\n  }\n\n  // Return with currency symbol added:\n  return useFormat\n    .replace('%s', opts.symbol)\n    .replace('%v', formatNumber(Math.abs(number), opts));\n}\n\nexport default formatMoney;\n","import isString from 'is-string';\n\n/**\n * Parses a format string or object and returns format obj for use in rendering\n *\n * `format` is either a string with the default (positive) format, or object\n * containing `pos` (required), `neg` and `zero` values\n *\n * Either string or format.pos must contain \"%v\" (value) to be valid\n *\n * @method _checkCurrencyFormat\n * @for accounting\n * @param {String}        [format=\"%s%v\"] String with the format to apply, where %s is the currency symbol and %v is the value.\n * @return {Object} object represnting format (with pos, neg and zero attributes)\n */\nfunction _checkCurrencyFormat(format) {\n  // Format should be a string, in which case `value` ('%v') must be present:\n  if (isString(format) && format.match('%v')) {\n    // Create and return positive, negative and zero formats:\n    return {\n      pos: format,\n      neg: format.replace('-', '').replace('%v', '-%v'),\n      zero: format\n    };\n  }\n\n  // Otherwise, assume format was fine:\n  return format;\n}\n\nexport default _checkCurrencyFormat;\n","import objectAssign from 'object-assign';\n\nimport _stripInsignificantZeros from './internal/stripInsignificantZeros';\nimport settings from './settings';\nimport toFixed from './toFixed';\n\n/**\n * Format a number, with comma-separated thousands and custom precision/decimal places\n * Alias: `accounting.format()`\n *\n * Localise by overriding the precision and thousand / decimal separators\n *\n * ```js\n * accounting.formatNumber(5318008);              // 5,318,008\n * accounting.formatNumber(9876543.21, { precision: 3, thousand: \" \" }); // 9 876 543.210\n * ```\n *\n * @method formatNumber\n * @for accounting\n * @param {Number}        number The number to be formatted.\n * @param {Object}        [opts={}] Object containing all the options of the method.\n * @return {String} The given number properly formatted.\n  */\nfunction formatNumber(number, opts = {}) {\n  // Resursively format arrays:\n  if (Array.isArray(number)) {\n    return number.map((val) => formatNumber(val, opts));\n  }\n\n  // Build options object from second param (if object) or all params, extending defaults:\n  opts = objectAssign({},\n    settings,\n    opts\n  );\n\n  // Do some calc:\n  const negative = number < 0 ? '-' : '';\n  const base = parseInt(toFixed(Math.abs(number), opts.precision), 10) + '';\n  const mod = base.length > 3 ? base.length % 3 : 0;\n\n  // Format the number:\n  const formatted = negative +\n    (mod ? base.substr(0, mod) + opts.thousand : '') +\n      base.substr(mod).replace(/(\\d{3})(?=\\d)/g, '$1' + opts.thousand) +\n        (opts.precision > 0 ? opts.decimal + toFixed(Math.abs(number), opts.precision).split('.')[1] : '');\n\n  return opts.stripZeros ? _stripInsignificantZeros(formatted, opts.decimal) : formatted;\n}\n\nexport default formatNumber;\n","\nfunction _stripInsignificantZeros(str, decimal) {\n  const parts = str.split(decimal);\n  const integerPart = parts[0];\n  const decimalPart = parts[1].replace(/0+$/, '');\n\n  if (decimalPart.length > 0) {\n    return integerPart + decimal + decimalPart;\n  }\n\n  return integerPart;\n}\n\nexport default _stripInsignificantZeros;\n","<script>\n  import { onMount } from \"svelte\";\n  import formatMoney from \"accounting-js/lib/formatMoney.js\";\n\n  //TextToSpeech.talk(\"Hello Beautiful World!\");\n  let previous = null;\n  let display = 0;\n  let operator = null;\n  let operatorClicked = false;\n  let decimalCount = 0;\n\n  const keys = [\n    \"AC\",\n    \"+/-\",\n    \"%\",\n    \"÷\",\n    7,\n    8,\n    9,\n    \"x\",\n    4,\n    5,\n    6,\n    \"-\",\n    1,\n    2,\n    3,\n    \"+\",\n    0,\n    \".\",\n    \"C\",\n    \"=\"\n  ];\n\n  const sign = () => {\n    display =\n      display < 0\n        ? (display = display - display * 2)\n        : (display = display - display * 2);\n  };\n\n  const percent = () => {\n    display = display / 100;\n  };\n\n  const append = number => () => {\n    //sayIt(number);\n\n    //Check if there is a decimal, if so increase the decimal count\n    if (display.toString().indexOf(\".\") > -1) {\n      decimalCount += 1;\n    }\n    //If there is a decimal and the next number is a decimal just return true\n    if (decimalCount > 1 && number === \".\") {\n      return;\n    }\n\n    if (operatorClicked === true) {\n      display = \"\";\n      operatorClicked = false;\n    }\n    display = display === 0 ? (display = number) : \"\" + display + number;\n    console.log(\"operatorClicked\", operatorClicked);\n  };\n\n  const functionFactory = func => () => {\n    sayIt(formatMoney(display));\n    let operatorAction = \"\";\n    switch (func) {\n      case \"AC\":\n        operatorAction = clear();\n        break;\n      case \"+\":\n        operatorAction = add();\n        sayIt(\"plus\");\n        break;\n      case \"x\":\n        operatorAction = multiply();\n        sayIt(\"times\");\n        break;\n      case \"÷\":\n        operatorAction = divide();\n        sayIt(\"divide by\");\n        break;\n      case \"-\":\n        operatorAction = subtract();\n        sayIt(\"subtract\");\n        break;\n      case \"=\":\n        sayIt(\"equal\");\n        operatorAction = equal();\n        break;\n      case \"C\":\n        sayIt(\"clear\");\n        operatorAction = clear();\n        break;\n      case \"%\":\n        sayIt(\"percent\");\n        operatorAction = percent();\n        break;\n      case \"+/-\":\n        operatorAction = sign();\n        break;\n      default:\n        operatorAction = \"\";\n    }\n    if (operatorAction !== \"\") {\n      decimalCount = 0;\n    }\n    return operatorAction;\n  };\n\n  const decimal = () => {\n    if (display.indexOf(\".\") === -1) {\n      append(\".\");\n    }\n  };\n\n  const divide = () => {\n    operator = (a, b) => a / b;\n    previous = display;\n    operatorClicked = true;\n  };\n\n  const multiply = () => {\n    operator = (a, b) => a * b;\n    previous = display;\n    operatorClicked = true;\n  };\n\n  const subtract = () => {\n    operator = (a, b) => a - b;\n    previous = display;\n    operatorClicked = true;\n  };\n\n  const add = () => {\n    console.log(\"add\");\n    operator = (a, b) => a + b;\n    previous = display;\n    operatorClicked = true;\n  };\n\n  const equal = () => {\n    console.log(\"equal\");\n    display = operator(Number(previous), Number(display));\n    sayIt(formatMoney(display));\n    previous = null;\n    operatorClicked = true;\n  };\n\n  const clear = () => (display = \"\");\n\n  const operatorString = operator => {\n    if (operator === \".\") {\n      return \"\";\n    }\n    return isNaN(operator) ? operator : \"\";\n  };\n\n  const sayIt = phrase => {\n    if (\"speechSynthesis\" in window) {\n      var msg = new SpeechSynthesisUtterance(phrase);\n      window.speechSynthesis.speak(msg);\n    }\n  };\n\n  onMount(async () => {\n    // const res = await fetch(\n    //   `https://jsonplaceholder.typicode.com/photos?_limit=20`\n    // );\n    // photos = await res.json();\n    // console.log(photos);\n  });\n</script>\n\n<style>\n  .keypad {\n    display: grid;\n    grid-template-columns: repeat(4, 5em);\n    grid-template-rows: repeat(5, 3em);\n    grid-gap: 0em;\n  }\n\n  button {\n    margin: 0;\n    border-bottom: solid 1px black;\n    border-right: solid 1px black;\n    border-top: none;\n    border-left: none;\n    border-radius: 0px;\n    height: 2.98em;\n    border-color: #000;\n  }\n\n  .button.is-warning,\n  .button.is-primary {\n    border-color: #000;\n  }\n\n  .calculator {\n    width: 500px;\n    margin-top: 100px;\n  }\n\n  .display {\n    width: 320px;\n    margin-top: -27px;\n    position: absolute;\n    font-size: 1.5rem;\n    border: solid 1px #000;\n    height: 50px;\n    padding: 10px;\n  }\n</style>\n\n<div class=\"columns calculator\">\n  <div class=\"column\">\n    <div class=\"columns\">\n      <div class=\"column\">\n        <h1 class=\"display\">{display}</h1>\n      </div>\n    </div>\n    <div class=\"columns\">\n      <div class=\"column\">\n        <div class=\"keypad\">\n          {#each keys as key}\n            <button\n              class={operatorString(key) === '' ? 'button is-primary' : 'button is-warning'}\n              on:click={operatorString(key) === '' ? append(key) : functionFactory(key)}>\n              {key}\n            </button>\n          {/each}\n        </div>\n      </div>\n    </div>\n  </div>\n\n</div>\n","<script>\n  import Calculator from \"./components/Calculator.svelte\";\n  export let name;\n</script>\n\n<style>\n  h1 {\n    color: purple;\n  }\n</style>\n\n<h1>Hello {name}!</h1>\n<Calculator />\n","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body,\n\tprops: {\n\t\tname: 'world'\n\t}\n});\n\nexport default app;"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","space","attr","attribute","value","removeAttribute","setAttribute","set_data","current_component","set_current_component","component","onMount","Error","get_current_component","$$","on_mount","push","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flush","seen_callbacks","Set","length","shift","update","pop","i","callback","has","add","fragment","dirty","before_update","p","ctx","after_update","outroing","outros","transition_in","block","local","delete","mount_component","on_destroy","m","new_on_destroy","map","filter","destroy_component","detaching","d","make_dirty","key","then","init","options","instance","create_fragment","not_equal","prop_names","parent_component","props","bound","context","Map","callbacks","ready","hydrate","l","Array","from","childNodes","c","intro","SvelteComponent","[object Object]","this","$destroy","type","index","indexOf","splice","getOwnPropertySymbols","hasOwnProperty","prototype","propIsEnumerable","propertyIsEnumerable","assign","test1","String","getOwnPropertyNames","test2","fromCharCode","n","join","test3","split","letter","keys","err","shouldUseNative","source","symbols","to","val","TypeError","toObject","s","arguments","call","strValue","valueOf","toStr","toString","hasToStringTag","Symbol","toStringTag","e","tryStringObject","settings","symbol","format","decimal","thousand","precision","grouping","stripZeros","fallback","toFixed","base","Math","round","abs","isNaN","power","pow","formatMoney","number","opts","isArray","objectAssign","formats","isString","match","pos","neg","replace","zero","useFormat","formatNumber","negative","parseInt","mod","formatted","substr","str","parts","integerPart","decimalPart","_stripInsignificantZeros","event","handler","operatorString","functionFactory","addEventListener","removeEventListener","display","iterations","previous","operator","operatorClicked","decimalCount","divide","multiply","subtract","console","log","equal","Number","sayIt","clear","phrase","window","msg","SpeechSynthesisUtterance","speechSynthesis","speak","async","func","operatorAction","o","body"],"mappings":"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"}